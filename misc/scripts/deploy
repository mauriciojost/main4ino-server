#!/usr/bin/env bash

set -e
set -x
set -u

root_dir=$(readlink -e `dirname $0`/../..)
config_dir=${1:-$root_dir/../config/}
ports_list=${2:-"8090 8091 8092"}
packages_dir=${3:-"/var/lib/main4ino/server"}

function print_context() {
  echo "whoami $(whoami)"
  echo "date: $(date)"
  echo "hostname: $(hostname)"
  echo "jps -l: $(jps -l)"
  echo "main4ino server: $(jps -l | grep org.mauritania.main4ino.Server)"
}

function is_port_free() {
  local port="$1"
  if nc -z 127.0.0.1 $port
  then
    echo "false"
  else
    echo "true"
  fi
}

function find_free_port() {
  local ports_list="$1"
  local first_free=""
  for port in $ports_list
  do
    if ! nc -z 127.0.0.1 "$port"
    then
      if [ -z "$first_free" ]
      then
        first_free="$port"
      fi
    fi
  done
  echo "$first_free"
}

function killem() {
  local pids="$1"
  if [ -n "$pids" ]
  then
    echo "Context for Killing existent apps: $pids"
    jps -l
    ps -ef | grep $pids
    echo "Killing existent apps: $pids"
    set +e
    kill $pids
    set -e
    sleep 5
    echo "Force killing existent apps: $pids"
    set +e
    kill -9 $pids
    set -e
  fi
}

function latest_package() {
  find "$packages_dir" -type f -name '*.zip' -printf "%T@ %p\n" | sort -n | tail -1 | awk '{print $2}'
}

function launch_instance() {
  local port="$1"
  local old_pids="$2"
  local stdout_logs="$3"
  local stderr_logs="$4"
  local pid_file="$5"
  local lock_file="$6"
  local zip_path="$7"
  local tmp_base_dir="/tmp"

  local tmp_dir="$tmp_base_dir/main4ino-deployment-$(basename $zip_path)"
  if [ ! -d "$tmp_dir" ]
  then
    mkdir -p "$tmp_dir"
    echo $zip_path | xargs -I% unzip % -d $tmp_dir
    echo "Temporary unzipped directory (created): $tmp_dir"
  else
    echo "Temporary unzipped directory (already existed): $tmp_dir"
  fi

  executable=$(find $tmp_dir -name main4ino-server -type f)

  daemonize -E BUILD_ID=dontKillMe \
    -o "$stdout_logs" \
    -e "$stderr_logs" \
    -p "$pid_file" \
    -l "$lock_file" \
    /usr/bin/nice -n 25 /bin/bash "$executable" \
    -Dserver.port="$port" \
    -Dconfig-dir="$config_dir" \
    -Dlog4j.configuration="file://$config_dir/custom-log4j.properties" &

}

cd $root_dir

print_context

old_pids=$(jps -l | grep org.mauritania.main4ino.Server | cut -d' ' -f1)

zip_path=$(latest_package)

target_port=$(find_free_port "$ports_list")

tmp_stdout_logs="$config_dir/app.port.$target_port.stdout.log"
tmp_stderr_logs="$config_dir/app.port.$target_port.stderr.log"
pid_file="$config_dir/app.port.$target_port.app.pid"
lock_file="$config_dir/app.port.$target_port.app.lock"

launch_instance "$target_port" "$old_pids" "$tmp_stdout_logs" "$tmp_stderr_logs" "$pid_file" "$lock_file" "$zip_path"

sleep 90

print_context

if [ "$(is_port_free $target_port)" == "false" ]
then
  echo "OK. The process is running (port $target_port taken)."
  killem "$old_pids"
  exit 0
else
  echo "KO. The process is not running (port $target_port not taken)."
  set +e
  killem "$(cat "$pid_file")"
  echo "STDOUT:"
  cat "$tmp_stdout_logs"
  echo "STDERR:"
  cat "$tmp_stderr_logs"
  set -e
  exit 1
fi

