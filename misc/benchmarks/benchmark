#!/usr/bin/env bash

root_dir=$(readlink -e $(dirname $0))/../../

set -e
set -u
#set -x

user_password="admin:password"
main4ino_server_address="localhost:8080"
description_body='{"version":"1.0.0", "json":[{"patterns": ["^actor1.p1$"], "descriptions": ["Property 1 xx."], "examples": ["1", "2", "3"]}]}'
iterations=${1:-50}
name=${2:-"noname"}
devs=5

echo ""
echo "rm -fr $root_dir/db"'*'
echo "jps  | grep sbt-launch.jar | awk '{print \$1}' | xargs -I% kill %"
echo "sbt -Ddev-logger.logs-base-path=$(mktemp -d) -Dconfig-dir=$root_dir/src/main/resources/defaultconfig/ 'runMain org.mauritania.main4ino.Server'"
echo ""
read -p "Press [Enter] key to start..."



session=`curl -s -X POST "http://$user_password@$main4ino_server_address/api/v1/session"`

curl_cmd="curl -s -o /tmp/file --header session:$session"

function description() {
  local device="$1"
  $curl_cmd -X PUT "http://$main4ino_server_address/api/v1/devices/$device/descriptions" -d "$description_body"
}

function insert_logs() {
  local device="$1"
  $curl_cmd -X PUT "$main4ino_server_address/api/v1/devices/$device/logs" -d @$root_dir/README.md
}

function get_logs() {
  local device="$1"
  local now_secs=`date +'%s'`
  let from_secs=$now_secs-10000
  $curl_cmd -X GET "$main4ino_server_address/api/v1/devices/$device/logs?from=$from_secs&to=$now_secs"
}

function insert_report() {
  local device="$1"
  local actor="$2"
  local body="$3"

  $curl_cmd -X POST \
    $main4ino_server_address/api/v1/devices/$device/reports/actors/$actor \
    -d "$body"
}

function get_last_report() {
  local device="$1"
  local actor="$2"
  $curl_cmd -X GET \
    $main4ino_server_address/api/v1/devices/$device/reports/actors/$actor/last
}

function get_last_report_all() {
  local device="$1"
  $curl_cmd -X GET \
    $main4ino_server_address/api/v1/devices/$device/reports/summary
}


function iteration_mix() {
  local dev=$1
  local n=$2

  for l in `seq 1 $n`
  do
    description dev$l &
    insert_report $dev body '{"_command1":"command1text'$l'","+command2":"command2text"}' &
    insert_report $dev body '{"_mv1":"move1text'$l'","mv2":"move2text"}' &
    insert_report $dev clock '{"~hour":5, "minute":'$l'}' &
    insert_report $dev clock '{"~hour":3,"minute":'$l',"second":5}' &
    insert_report $dev clocksync '{"+freq":"~1'$l'h"}' &
    insert_report $dev clocksync '{"+freq":"~2'$l'h"}' &
    insert_report $dev clocksync '{"+freq":"~4'$l'h"}' &
    
    get_last_report $dev body &
    get_last_report $dev clock &
    get_last_report $dev clocksync &
    get_last_report_all $dev &
    get_last_report_all $dev &
    get_last_report_all $dev &

    insert_logs $dev &
    insert_logs $dev &
    insert_logs $dev &

    get_logs $dev &
    get_logs $dev &
    get_logs $dev &

    wait

  done
}

function iteration_read() {
  local dev=$1
  local n=$2

  for l in `seq 1 $n`
  do
    get_last_report $dev body &
    get_last_report $dev clock &
    get_last_report $dev clocksync &
    get_last_report_all $dev &
    get_last_report_all $dev &
    get_last_report_all $dev &
    get_logs $dev &
    get_logs $dev &
    get_logs $dev &

    wait

  done
}

function iteration_write() {
  local dev=$1
  local n=$2

  for l in `seq 1 $n`
  do
    description dev$l &
    insert_report $dev body '{"command1":"command1text'$l'","command2":"command2text"}' &
    insert_report $dev body '{"mv1":"move1text'$l'","mv2":"move2text"}' &
    insert_report $dev clock '{"hour":5, "minute":'$l'}' &
    insert_report $dev clock '{"hour":'$l',"minute":4,"second":5}' &
    insert_report $dev clocksync '{"freq":"~1'$l'h"}' &
    insert_report $dev clocksync '{"freq":"~2'$l'h"}' &
    insert_report $dev clocksync '{"freq":"~4'$l'h"}' &
    insert_report $dev body '{"command3":"command1text'$l'","command2":"command2text"}' &
    insert_report $dev body '{"mv3":"move1text'$l'","mv2":"move2text"}' &
    insert_report $dev clock '{"hour":8, "minute":'$l'}' &
    insert_report $dev clock '{"hour":8,"minute":4,"second":5}' &
    insert_report $dev clocksync '{"freq":"~2'$l'h"}' &
    insert_report $dev clocksync '{"freq":"~3'$l'h"}' &
    insert_report $dev clocksync '{"freq":"~4'$l'h"}' &

    insert_logs $dev &
    insert_logs $dev &
    insert_logs $dev &

    wait 

  done
}

function fullbenchmark() {
  local k=$1

  echo "### MIX k=$k"
  for d in `seq 1 $devs`
  do
    time iteration_mix dev$d $k
  done

  echo "### WRITE k=$k"
  for d in `seq 1 $devs`
  do
    time iteration_write dev$d $k
  done

  echo "### READ k=$k"
  for d in `seq 1 $devs`
  do
    time iteration_read dev$d $k
  done

  echo "### DONE"
}

mkdir -p $root_dir/misc/benchmarks/db-k$iterations/
fullbenchmark $iterations &> $root_dir/misc/benchmarks/db-k$iterations/`git rev-parse HEAD`.$RANDOM.$name.benchmark.log

